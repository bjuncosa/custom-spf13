""UnBundle 'Shougo/neocomplcache'
UnBundle 'spf13/PIV'
UnBundle 'airblade/vim-gitgutter'

" Stops me from entering ex mode on accident
nnoremap Q <nop>

" yank current buffer's filepath
nnoremap \f :call setreg(v:register, substitute(expand('%:p'),'\','/','g'))<CR>

" simulate emacs' transpose feature, including its inverse, from this thread:
" http://www.reddit.com/r/emacs/comments/wd5ak/grokking_emacs/c5cehm0?context=2
nnoremap <Leader><Leader>l /\<<CR>yiw?\<<CR>viwp/\<<CR>viwp:noh<CR>
nnoremap <Leader><Leader>h ?\w\><CR>yiw/\<<CR>viwp?\w\><CR>viwp:noh<CR>" pretty up JSON data

" match indent of next line to beginning of current word
nnoremap <Leader><Tab> yiwy0o""pVr J

" clear normal/visual mode highlighting
noremap <Space> :<c-u>noh<CR>:echo<CR>

" copy current line sans leading/trailing whitespace
nnoremap gy m`^yg_``"

" next/previous word under cursor in same column
nnoremap g* yiw/^.*\%<C-r>=col('.')<CR>c\zs<C-r>"<CR>
nnoremap g# yiw?^.*\%<C-r>=col('.')<CR>c\zs<C-r>"<CR>" * and # without moving the cursor

set t_ut=

autocmd BufEnter * :syntax sync fromstart

let g:acp_enableAtStartup = 0

" swap jump to tag / multiple tag
nnoremap <c-]> g<c-]>
vnoremap <c-]> g<c-]>
nnoremap g<c-]> <c-]>
vnoremap g<c-]> <c-]>
nnoremap t g<c-]>
vnoremap t g<c-]>

" disable syntax check for php files when saving
let syntastic_mode_map={ 'mode': 'active',
                     \ 'active_filetypes': [],
                     \ 'passive_filetypes': ['php', 'py'] }
nmap <c-s> :SyntasticCheck<CR>


" set foldlevelstart=20
set nospell " fuck spell check
set nocursorline
set clipboard=unnamed " aint working

" let g:autoclose_loaded = 1

nmap <unique> <silent> <Leader>, <Plug>MarkSet
vmap <unique> <silent> <Leader>, <Plug>MarkSet </Plug></Leader></silent></unique>
nmap <unique> <silent> <leader>x <Plug>MarkClear</Plug></leader></silent></unique>

""" override vim distrib
set background=light
colorscheme molokai
"colorscheme herald
let g:indent_guides_enable_on_vim_startup = 0
" let g:Powerline_stl_path_style = "full"

map <C-l> :TagbarToggle<CR>
nmap <C-j> :tabprevious<CR>
nmap <C-k> :tabnext<CR>

" Search mappings: These will make it so that going to the next one in a
" search will center on the line it's found in.
map N Nzz
map n nzz

" fill current line with previus line word by word
imap <expr> <c-u> matchstr(getline(line('.')-1), '\%' . virtcol('.') . 'v\%(\k\+\s\=\\|.\)')

" Make BS/DEL work as expected in visual modes (i.e. delete elected)...
vmap <BS> x

" Visual Block mode is far more useful that Visual mode (so swap the commands)...
nnoremap v <C-V>
nnoremap <C-V> v

"Delete in normal mode to switch off highlighting till next search and clear messages...
nmap <silent> <BS> :nohlsearch<CR>

" make Y behave like D or C
nnoremap Y y$

" free block select
set virtualedit=block

" replace all ocurrences
set gdefault
"
"Ever notice a slight lag after typing the leader key + command? This lowers the timeout.
set timeoutlen=250

" don't cut lines
set wrap

"Nerdtree config
let g:NERDTreeDirArrows=0

"Pysmell specific config
"source ~/.vim/plugins/pysmell.vim
"autocmd FileType python setlocal omnifunc=pysmell#Complete
"let g:pysmell_matcher='case-sensitive'

source ~/.vim/ftplugins/puppet.vim

"Pydiction specific config
let g:pydiction_location = '/home/vagrant/.vim/bundle/pydiction/complete-dict'
let g:pydiction_menu_height = 20
